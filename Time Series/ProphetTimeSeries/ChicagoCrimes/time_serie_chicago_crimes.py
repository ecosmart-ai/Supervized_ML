# -*- coding: utf-8 -*-
"""Time Serie-Chicago Crimes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_8fmPOKv13rj3cRXllENeo_sHCpzh83K
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas.util.testing as tm
from google.colab import drive
drive.mount('/content/drive')

#import data from google drive
path1 = '/content/drive/My Drive/Data/ChicagoCrimes/Chicago_Crimes_2005_to_2007.csv'
df_chicago_1 = pd.read_csv(path1,error_bad_lines=False)
path2 = "/content/drive/My Drive/Data/ChicagoCrimes/Chicago_Crimes_2008_to_2011.csv"
df_chicago_2 = pd.read_csv(path2,error_bad_lines=False)
path3 = "/content/drive/My Drive/Data/ChicagoCrimes/Chicago_Crimes_2012_to_2017.csv"
df_chicago_3 = pd.read_csv(path3,error_bad_lines=False)



chicago_df=pd.concat([df_chicago_1,df_chicago_2,df_chicago_3])
chicago_df['Date']=pd.to_datetime(chicago_df['Date'],format='%m/%d/%Y %I:%M:%S %p')

chicago_df.index=pd.DatetimeIndex(chicago_df.Date)

chicago_df.isnull().sum()

order_PrimaryType =chicago_df['Primary Type'].value_counts().iloc[:15].index
plt.figure(figsize=(15,10))
sns.countplot(y='Primary Type', data= chicago_df, order =order_PrimaryType)

plt.figure(figsize=(15,10))
sns.countplot(y='Location Description', data= chicago_df , order=chicago_df['Location Description'].value_counts().iloc[:15].index)

chicago_df.resample('Y').size()

plt.plot(chicago_df.resample('Y').size())
plt.title('Crime count per year')

plt.plot(chicago_df.resample('m').size())
plt.title('Crime count per month')

plt.plot(chicago_df.resample('q').size())
plt.title('Crime count per Quarter')

# preparing the data  
chicago_prophet = chicago_df.resample('M').size().reset_index()

chicago_prophet

chicago_prophet.columns= ['Date', 'Crime Count']

chicago_prophet_df_final = chicago_prophet.rename(columns={'Date':'ds', 'Crime Count':'y'})

chicago_prophet_df_final

from fbprophet import Prophet
m= Prophet()
m.fit(chicago_prophet_df_final)

future = m.make_future_dataframe(periods =720)
forecast = m.predict(future)



figure = m.plot(forecast , xlabel='date', ylabel='Crime Rate')

figure = m.plot_components(forecast)